using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Collections;
using System.ComponentModel;
using System.Diagnostics.CodeAnalysis;
using System.Globalization;
using System.IO;
using System.Linq;
using System.Reflection;
using System.Runtime.Serialization;
using System.Text.RegularExpressions;
using System.Text;
using System;

class Result
{
    public static int queensAttack(int n, int k, int r_q, int c_q, List<List<int>> obstacles)
    {
        var obstacleSet = new HashSet<(int, int)>();
        foreach (var obs in obstacles)
        {
            obstacleSet.Add((obs[0], obs[1]));
        }

        int[,] directions = new int[,] {
            {0, 1}, {0, -1}, {-1, 0}, {1, 0}, 
            {1, 1}, {-1, -1}, {-1, 1}, {1, -1}
        };

        int attackableSquares = 0;

        for (int i = 0; i < 8; i++)
        {
            int dr = directions[i, 0];
            int dc = directions[i, 1];

            int currentR = r_q + dr;
            int currentC = c_q + dc;

            while (currentR >= 1 && currentR <= n && currentC >= 1 && currentC <= n)
            {
                if (obstacleSet.Contains((currentR, currentC)))
                {
                    break;
                }

                attackableSquares++;

                currentR += dr;
                currentC += dc;
            }
        }

        return attackableSquares;
    }

}

class Solution
{
    public static void Main(string[] args)
    {
        TextWriter textWriter = new StreamWriter(@System.Environment.GetEnvironmentVariable("OUTPUT_PATH"), true);

        string[] firstMultipleInput = Console.ReadLine().TrimEnd().Split(' ');

        int n = Convert.ToInt32(firstMultipleInput[0]);

        int k = Convert.ToInt32(firstMultipleInput[1]);

        string[] secondMultipleInput = Console.ReadLine().TrimEnd().Split(' ');

        int r_q = Convert.ToInt32(secondMultipleInput[0]);

        int c_q = Convert.ToInt32(secondMultipleInput[1]);

        List<List<int>> obstacles = new List<List<int>>();

        for (int i = 0; i < k; i++)
        {
            obstacles.Add(Console.ReadLine().TrimEnd().Split(' ').ToList().Select(obstaclesTemp => Convert.ToInt32(obstaclesTemp)).ToList());
        }

        int result = Result.queensAttack(n, k, r_q, c_q, obstacles);

        textWriter.WriteLine(result);

        textWriter.Flush();
        textWriter.Close();
    }
}